diff --git a/test.py b/test.py
index 581faa4..458f3b9 100644
--- a/test.py
+++ b/test.py
@@ -20,7 +20,7 @@ from datasets import ImageDataset
 def main():
     parser = argparse.ArgumentParser()
     parser.add_argument('--batchSize', type=int, default=1, help='size of the batches')
-    parser.add_argument('--dataroot', type=str, default='datasets/image_calibration/', help='root directory of the dataset')
+    parser.add_argument('--dataroot', type=str, default='A:/Users/SSY/Desktop/dataset/image_calibration/0619 train set')
     parser.add_argument('--input_nc', type=int, default=3, help='number of channels of input data')
     parser.add_argument('--output_nc', type=int, default=3, help='number of channels of output data')
     parser.add_argument('--size', type=int, default=256, help='size of the data (squared assumed)')
@@ -29,7 +29,6 @@ def main():
     parser.add_argument('--generator_A2B', type=str, default='output/netG_A2B.pth', help='A2B generator checkpoint file')
     parser.add_argument('--generator_B2A', type=str, default='output/netG_B2A.pth', help='B2A generator checkpoint file')
     opt = parser.parse_args()
-    print(opt)
 
     if torch.cuda.is_available() and not opt.cuda:
         print("WARNING: You have a CUDA device, so you should probably run with --cuda")
diff --git a/train.py b/train.py
index 4b3d2ff..e38828a 100644
--- a/train.py
+++ b/train.py
@@ -26,7 +26,7 @@ def main():
     parser.add_argument('--epoch', type=int, default=0, help='starting epoch')
     parser.add_argument('--n_epochs', type=int, default=10, help='number of epochs of training')
     parser.add_argument('--batchSize', type=int, default=1, help='size of the batches')
-    parser.add_argument('--dataroot', type=str, default='datasets/image_calibration/', help='root directory of the dataset')
+    parser.add_argument('--dataroot', type=str, default='A:/Users/SSY/Desktop/dataset/image_calibration/0619 train set')
     parser.add_argument('--lr', type=float, default=0.0002, help='initial learning rate')
     parser.add_argument('--decay_epoch', type=int, default=5, help='epoch to start linearly decaying the learning rate to 0')
     parser.add_argument('--size', type=int, default=256, help='size of the data crop (squared assumed)')
@@ -53,10 +53,9 @@ def main():
     wandb.watch(netD_A)
     wandb.watch(netD_B)
 
-    Digo.init(api_key="qpqD6cHYvGG2XNHeGlHog8360T8uWHya", workspace_name='SunyongGod', project_name='sunyong project')
+    Digo.init(api_key="x8ElGAL0cfbKCmkFYQHEZUcvc3CSmfPs", workspace_name='sunyong2', project_name='sunyong2pro1')
     Digo.setParameter(parser)
 
-
     if opt.cuda:
         netG_A2B.cuda()
         netG_B2A.cuda()
diff --git a/train.sh b/train.sh
index a6937e7..cb67970 100644
--- a/train.sh
+++ b/train.sh
@@ -1,2 +1,2 @@
 #
-python train.py --n_epochs 10 --decay_epoch 5 --batchSize 2 --n_cpu 4 --cuda
+python train.py --n_epochs 2 --decay_epoch 1 --batchSize 2 --n_cpu 4 --cuda
diff --git a/utils.py b/utils.py
index 8d5fe33..a6d3856 100755
--- a/utils.py
+++ b/utils.py
@@ -66,10 +66,12 @@ class Logger():
 
         # Digo. End of epoch
         if (self.batch % self.batches_epoch) == 0:
-            Digo.imageLog(
-                {"real_A": Image.fromarray(images["real_A"][0].cpu().transpose(0, 2).numpy(), "RGB"),
-                 "fake_A": Image.fromarray(images["fake_A"][0].cpu().transpose(0, 2).numpy(), "RGB"),
-                 "fake_B": Image.fromarray(images["fake_B"][0].cpu().transpose(0, 2).numpy(), "RGB")})
+            # Digo.imageLog(
+            #     {"real_A": Image.fromarray(images["real_A"][0].cpu().transpose(0, 2).numpy(), "RGB"),
+            #      "fake_A": Image.fromarray(images["fake_A"][0].cpu().transpose(0, 2).numpy(), "RGB"),
+            #      "fake_B": Image.fromarray(images["fake_B"][0].cpu().transpose(0, 2).numpy(), "RGB")})
+            temp = Image.fromarray(images["real_A"][0].cpu().transpose(0, 2).numpy())
+            temp.show()
 
             # {'real_A': real_A, 'real_B': real_B, 'fake_A': fake_A, 'fake_B': fake_B}
 
